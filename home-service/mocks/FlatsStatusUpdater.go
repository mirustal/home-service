// Code generated by mockery v2.44.2. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	models "home-service/internal/models"
)

// FlatsStatusUpdater is an autogenerated mock type for the FlatsStatusUpdater type
type FlatsStatusUpdater struct {
	mock.Mock
}

// UpdateFlatStatus provides a mock function with given fields: ctx, flatID, status
func (_m *FlatsStatusUpdater) UpdateFlatStatus(ctx context.Context, flatID int, status string) (models.Flat, error) {
	ret := _m.Called(ctx, flatID, status)

	if len(ret) == 0 {
		panic("no return value specified for UpdateFlatStatus")
	}

	var r0 models.Flat
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, int, string) (models.Flat, error)); ok {
		return rf(ctx, flatID, status)
	}
	if rf, ok := ret.Get(0).(func(context.Context, int, string) models.Flat); ok {
		r0 = rf(ctx, flatID, status)
	} else {
		r0 = ret.Get(0).(models.Flat)
	}

	if rf, ok := ret.Get(1).(func(context.Context, int, string) error); ok {
		r1 = rf(ctx, flatID, status)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewFlatsStatusUpdater creates a new instance of FlatsStatusUpdater. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewFlatsStatusUpdater(t interface {
	mock.TestingT
	Cleanup(func())
}) *FlatsStatusUpdater {
	mock := &FlatsStatusUpdater{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
